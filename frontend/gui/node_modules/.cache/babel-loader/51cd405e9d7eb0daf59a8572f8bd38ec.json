{"ast":null,"code":"var _jsxFileName = \"P:\\\\wit_hackathon\\\\frontend\\\\gui\\\\src\\\\components\\\\weather.js\";\n// Author - bharath k (bharatk7@in.ibm.com)\nimport React from \"react\";\nimport { Button } from \"./Button\";\nimport { get_weather } from \"../Services/Rest_call\";\nimport \"./form.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport * as IoIcons from \"react-icons/io5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleview = (event = null, index = null) => {\n      if (index === 0) {\n        var active = index;\n      } else {\n        active = event.target.getAttribute(\"value\");\n      }\n\n      this.setState({\n        active_index: active\n      });\n      var element;\n      var elements = document.getElementsByClassName(\"days\");\n\n      for (element of elements) {\n        element.classList.remove(\"day_active\");\n      }\n\n      document.getElementById(active).classList.add(\"day_active\");\n    };\n\n    this.handleinput = event => {\n      this.setState({\n        postal: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      var self = this;\n      event.preventDefault();\n      get_weather(event.target.postal.value).then(res => {\n        this.setState({\n          resp_data: res.data,\n          day_list: res.data.day,\n          max_temp: res.data.max_temp,\n          min_temp: res.data.min_temp,\n          active_index: 0\n        });\n        self.handleview(null, 0);\n      }).catch(function (error) {\n        if (!error.response) {\n          alert(\"Connection to host failed\");\n        } else {\n          if (error.response.status === 500) {\n            toast.error(\"Internal Server Error\", {\n              autoClose: 3000\n            });\n          }\n\n          if (error.response.status === 401) {\n            localStorage.clear();\n            self.props.update_login();\n          }\n\n          if (error.response.status === 400) {\n            try {\n              if (error.response.data.topic !== undefined) {\n                toast.error(\"Topic : \" + error.response.data.topic[0], {\n                  autoClose: 3000\n                });\n              }\n            } catch {}\n\n            try {\n              if (error.response.data.description !== undefined) {\n                toast.error(\"Description : \" + error.response.data.description[0], {\n                  autoClose: 3000\n                });\n              }\n            } catch {}\n          }\n        }\n      });\n    };\n\n    this.state = {\n      resp_data: \"\",\n      day_list: \"\",\n      active_index: -1,\n      max_temp: \"\",\n      min_temp: \"\",\n      postal: \"\",\n      textAreaValue: \"\",\n      view_day: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleinput = this.handleinput.bind(this);\n    this.handleview = this.handleview.bind(this);\n  }\n\n  render() {\n    var day_list = this.state.day_list;\n    var active_index = this.state.active_index;\n    var resp_data = this.state.resp_data;\n    let days;\n    let details;\n\n    const getdetails = (index, side) => {\n      if (side === 0) {\n        details = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tod\",\n            children: /*#__PURE__*/_jsxDEV(IoIcons.IoSunny, {\n              className: \"tod\",\n              size: 30\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Min Temparature : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), resp_data.min_temp[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" Max Temparature : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), resp_data.max_temp[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" Windspeed (mph): \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), resp_data.day_windSpeed[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" Windspeed Details : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), resp_data.day_wind_dir_disc[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Precipitation Chance : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), resp_data.day_precipChance[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Precipitation Type : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), resp_data.day_precipType[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" Details : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), resp_data.day_narrative[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      } else {\n        details = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tod\",\n            children: /*#__PURE__*/_jsxDEV(IoIcons.IoMoonSharp, {\n              className: \"tod\",\n              size: 30\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Min Temparature : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), resp_data.min_temp[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" Max Temparature : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), resp_data.max_temp[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Windspeed (mph): \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), resp_data.night_windSpeed[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Windspeed Details : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), resp_data.night_wind_dir_disc[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Precipitaion Chance : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), resp_data.night_precipChance[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Precipitaion Type : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), resp_data.night_precipType[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"max_temp visible\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Details : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), resp_data.night_narrative[index] || \"NA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }\n\n      return details;\n    };\n\n    if (day_list.length !== 0) {\n      days = day_list.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: index === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"days day_active\",\n          value: index,\n          id: index,\n          onClick: this.handleview,\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"days \",\n          value: index,\n          id: index,\n          onClick: this.handleview,\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)\n      }, void 0, false));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wformContainer\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"wformC\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rows\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnw\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"theInputsw\",\n              value: this.postal,\n              onChange: this.handleinput,\n              placeholder: \"Postal Code\",\n              type: \"number\",\n              name: \"postal\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              buttonStyle: \"btn--primaryw\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), day_list.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollable\",\n        children: days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lh\",\n          children: active_index !== -1 && \"Day data for : \" && getdetails(active_index, 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rh\",\n          children: [\" \", active_index !== -1 && \"Day data for : \" && getdetails(active_index, 1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["P:/wit_hackathon/frontend/gui/src/components/weather.js"],"names":["React","Button","get_weather","toast","IoIcons","configure","Weather","Component","constructor","props","handleview","event","index","active","target","getAttribute","setState","active_index","element","elements","document","getElementsByClassName","classList","remove","getElementById","add","handleinput","postal","value","handleSubmit","self","preventDefault","then","res","resp_data","data","day_list","day","max_temp","min_temp","catch","error","response","alert","status","autoClose","localStorage","clear","update_login","topic","undefined","description","state","textAreaValue","view_day","bind","render","days","details","getdetails","side","day_windSpeed","day_wind_dir_disc","day_precipChance","day_precipType","day_narrative","night_windSpeed","night_wind_dir_disc","night_precipChance","night_precipType","night_narrative","length","map","item"],"mappings":"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","sourcesContent":["// Author - bharath k (bharatk7@in.ibm.com)\r\nimport React from \"react\";\r\nimport { Button } from \"./Button\";\r\nimport { get_weather } from \"../Services/Rest_call\";\r\nimport \"./form.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as IoIcons from \"react-icons/io5\";\r\n\r\ntoast.configure();\r\n\r\nclass Weather extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      resp_data: \"\",\r\n      day_list: \"\",\r\n      active_index: -1,\r\n      max_temp: \"\",\r\n      min_temp: \"\",\r\n      postal: \"\",\r\n      textAreaValue: \"\",\r\n      view_day: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleinput = this.handleinput.bind(this);\r\n    this.handleview = this.handleview.bind(this);\r\n  }\r\n  handleview = (event = null, index = null) => {\r\n    if (index === 0) {\r\n      var active = index;\r\n    } else {\r\n      active = event.target.getAttribute(\"value\");\r\n    }\r\n    this.setState({\r\n      active_index: active,\r\n    });\r\n\r\n    var element;\r\n    var elements = document.getElementsByClassName(\"days\");\r\n    for (element of elements) {\r\n      element.classList.remove(\"day_active\");\r\n    }\r\n    document.getElementById(active).classList.add(\"day_active\");\r\n  };\r\n  handleinput = (event) => {\r\n    this.setState({\r\n      postal: event.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    var self = this;\r\n    event.preventDefault();\r\n\r\n    get_weather(event.target.postal.value)\r\n      .then((res) => {\r\n        this.setState({\r\n          resp_data: res.data,\r\n          day_list: res.data.day,\r\n          max_temp: res.data.max_temp,\r\n          min_temp: res.data.min_temp,\r\n          active_index: 0,\r\n        });\r\n        self.handleview(null, 0);\r\n      })\r\n      .catch(function (error) {\r\n        if (!error.response) {\r\n          alert(\"Connection to host failed\");\r\n        } else {\r\n          if (error.response.status === 500) {\r\n            toast.error(\"Internal Server Error\", {\r\n              autoClose: 3000,\r\n            });\r\n          }\r\n          if (error.response.status === 401) {\r\n            localStorage.clear();\r\n            self.props.update_login();\r\n          }\r\n          if (error.response.status === 400) {\r\n            try {\r\n              if (error.response.data.topic !== undefined) {\r\n                toast.error(\"Topic : \" + error.response.data.topic[0], {\r\n                  autoClose: 3000,\r\n                });\r\n              }\r\n            } catch {}\r\n            try {\r\n              if (error.response.data.description !== undefined) {\r\n                toast.error(\r\n                  \"Description : \" + error.response.data.description[0],\r\n                  {\r\n                    autoClose: 3000,\r\n                  }\r\n                );\r\n              }\r\n            } catch {}\r\n          }\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    var day_list = this.state.day_list;\r\n    var active_index = this.state.active_index;\r\n    var resp_data = this.state.resp_data;\r\n\r\n    let days;\r\n    let details;\r\n    const getdetails = (index, side) => {\r\n      if (side === 0) {\r\n        details = (\r\n          <>\r\n            <span className=\"tod\">\r\n              <IoIcons.IoSunny className=\"tod\" size={30} />\r\n            </span>\r\n\r\n            <br />\r\n            <p className=\"max_temp visible\">\r\n              <b>Min Temparature : </b>\r\n              {resp_data.min_temp[index] || \"NA\"}\r\n            </p>\r\n            <p className=\"max_temp visible\">\r\n              <b> Max Temparature : </b>\r\n              {resp_data.max_temp[index] || \"NA\"}\r\n            </p>\r\n            <p className=\"max_temp visible\">\r\n              <b> Windspeed (mph): </b>\r\n              {resp_data.day_windSpeed[index] || \"NA\"}\r\n            </p>\r\n            <p className=\"max_temp visible\">\r\n              <b> Windspeed Details : </b>\r\n              {resp_data.day_wind_dir_disc[index] || \"NA\"}\r\n            </p>\r\n\r\n            <p className=\"max_temp visible\">\r\n              <b>Precipitation Chance : </b>\r\n              {resp_data.day_precipChance[index] || \"NA\"}\r\n            </p>\r\n\r\n            <p className=\"max_temp visible\">\r\n              <b>Precipitation Type : </b>\r\n              {resp_data.day_precipType[index] || \"NA\"}\r\n            </p>\r\n\r\n            <p className=\"max_temp visible\">\r\n              <b> Details : </b>\r\n              {resp_data.day_narrative[index] || \"NA\"}\r\n            </p>\r\n          </>\r\n        );\r\n      } else {\r\n        details = (\r\n          <>\r\n            <span className=\"tod\">\r\n              <IoIcons.IoMoonSharp className=\"tod\" size={30} />\r\n            </span>\r\n\r\n            <br />\r\n            <p className=\"max_temp visible\">\r\n              <b>Min Temparature : </b>\r\n              {resp_data.min_temp[index] || \"NA\"}\r\n            </p>\r\n            <p className=\"max_temp visible\">\r\n              <b> Max Temparature : </b>\r\n              {resp_data.max_temp[index] || \"NA\"}\r\n            </p>\r\n            <p className=\"max_temp visible\">\r\n              <b>Windspeed (mph): </b>\r\n              {resp_data.night_windSpeed[index] || \"NA\"}\r\n            </p>\r\n            <p className=\"max_temp visible\">\r\n              <b>Windspeed Details : </b>\r\n              {resp_data.night_wind_dir_disc[index] || \"NA\"}\r\n            </p>\r\n            <p className=\"max_temp visible\">\r\n              <b>Precipitaion Chance : </b>\r\n              {resp_data.night_precipChance[index] || \"NA\"}\r\n            </p>\r\n            <p className=\"max_temp visible\">\r\n              <b>Precipitaion Type : </b>\r\n              {resp_data.night_precipType[index] || \"NA\"}\r\n            </p>\r\n            <p className=\"max_temp visible\">\r\n              <b>Details : </b>\r\n              {resp_data.night_narrative[index] || \"NA\"}\r\n            </p>\r\n          </>\r\n        );\r\n      }\r\n\r\n      return details;\r\n    };\r\n\r\n    if (day_list.length !== 0) {\r\n      days = day_list.map((item, index) => (\r\n        <>\r\n          {index === 0 ? (\r\n            <span\r\n              className=\"days day_active\"\r\n              value={index}\r\n              key={item}\r\n              id={index}\r\n              onClick={this.handleview}\r\n            >\r\n              {item}\r\n            </span>\r\n          ) : (\r\n            <span\r\n              className=\"days \"\r\n              value={index}\r\n              key={index}\r\n              id={index}\r\n              onClick={this.handleview}\r\n            >\r\n              {item}\r\n            </span>\r\n          )}\r\n        </>\r\n      ));\r\n    }\r\n    return (\r\n      <div id=\"wformContainer\" onSubmit={this.handleSubmit}>\r\n        <form id=\"wformC\">\r\n          <div className=\"rows\">\r\n            <div className=\"columnw\">\r\n              <input\r\n                className=\"theInputsw\"\r\n                value={this.postal}\r\n                onChange={this.handleinput}\r\n                placeholder=\"Postal Code\"\r\n                type=\"number\"\r\n                name=\"postal\"\r\n                required\r\n              />\r\n              <Button type=\"submit\" buttonStyle=\"btn--primaryw\">\r\n                Search\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        {day_list.length > 0 && <div className=\"scrollable\">{days}</div>}\r\n        <div className=\"container\">\r\n          <div className=\"lh\">\r\n            {active_index !== -1 &&\r\n              \"Day data for : \" &&\r\n              getdetails(active_index, 0)}\r\n          </div>\r\n\r\n          <div className=\"rh\">\r\n            {\" \"}\r\n            {active_index !== -1 &&\r\n              \"Day data for : \" &&\r\n              getdetails(active_index, 1)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Weather;\r\n"]},"metadata":{},"sourceType":"module"}